/**
 * Á§∫‰æãÔºö‰∫ã‰ª∂Â§ÑÁêÜÊºîÁ§∫
 * ÊºîÁ§∫Â¶Ç‰Ωï‰ΩøÁî® pause/resume ÂíåÊâÄÊúâ‰∫ã‰ª∂ÁõëÂê¨Âô®
 */

const { AudioCapture, getDeviceInfo } = require('../index');

async function main() {
    console.log('üéµ Windows Audio Capture - Events Example\n');
    
    // Ëé∑ÂèñËÆæÂ§á‰ø°ÊÅØ
    const device = getDeviceInfo();
    console.log('üì± Default Audio Device:', device.name);
    console.log();
    
    // ÂàõÂª∫ÊçïËé∑Âô®
    const capture = new AudioCapture({ processId: 0 });
    
    let dataCount = 0;
    
    // ÁõëÂê¨ÊâÄÊúâ‰∫ã‰ª∂
    capture.on('started', () => {
        console.log('üü¢ [EVENT] started - Audio capture is now running');
    });
    
    capture.on('stopped', () => {
        console.log('üî¥ [EVENT] stopped - Audio capture has stopped');
    });
    
    capture.on('paused', () => {
        console.log('‚è∏Ô∏è  [EVENT] paused - Audio capture is paused (no data events)');
    });
    
    capture.on('resumed', () => {
        console.log('‚ñ∂Ô∏è  [EVENT] resumed - Audio capture resumed');
    });
    
    capture.on('data', (event) => {
        dataCount++;
        if (dataCount % 20 === 0) {
            console.log(`üì¶ [EVENT] data - Packet #${dataCount}, ${event.length} bytes`);
        }
    });
    
    capture.on('error', (error) => {
        console.error('‚ùå [EVENT] error -', error.message);
    });
    
    // ÂêØÂä®ÊçïËé∑
    console.log('‚ñ∂Ô∏è  Starting capture...\n');
    await capture.start();
    
    // ÊºîÁ§∫‰∫ã‰ª∂Â∫èÂàó
    console.log('\n‚è±Ô∏è  Demo sequence:');
    console.log('  - 0s: Start capture');
    console.log('  - 3s: Pause capture');
    console.log('  - 6s: Resume capture');
    console.log('  - 9s: Stop capture\n');
    
    // 3 ÁßíÂêéÊöÇÂÅú
    setTimeout(() => {
        console.log('\n‚è∏Ô∏è  Pausing capture...');
        capture.pause();
        console.log(`   (Captured ${dataCount} packets before pause)\n`);
    }, 3000);
    
    // 6 ÁßíÂêéÊÅ¢Â§ç
    setTimeout(() => {
        console.log('\n‚ñ∂Ô∏è  Resuming capture...');
        capture.resume();
        console.log();
    }, 6000);
    
    // 9 ÁßíÂêéÂÅúÊ≠¢
    setTimeout(async () => {
        console.log('\nüõë Stopping capture...');
        await capture.stop();
        console.log(`\nüìä Total packets captured: ${dataCount}`);
        console.log('‚úÖ Demo completed\n');
        process.exit(0);
    }, 9000);
}

// Â§ÑÁêÜ Ctrl+C
process.on('SIGINT', () => {
    console.log('\n\n‚ö†Ô∏è  Interrupted by user');
    process.exit(0);
});

main().catch(console.error);
